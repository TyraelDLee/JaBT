<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="22" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1689" started-at="2020-12-21T09:36:56Z" finished-at="2020-12-21T09:36:58Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1689" started-at="2020-12-21T09:36:56Z" finished-at="2020-12-21T09:36:58Z">
      <class name="com.turn.ttorrent.common.protocol.http.HTTPAnnounceResponseMessageTest">
        <test-method status="PASS" signature="parseTest()[pri:0, instance:com.turn.ttorrent.common.protocol.http.HTTPAnnounceResponseMessageTest@2812cbfa]" name="parseTest" duration-ms="62" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTest -->
      </class> <!-- com.turn.ttorrent.common.protocol.http.HTTPAnnounceResponseMessageTest -->
      <class name="com.turn.ttorrent.common.TorrentParserTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="setUp" is-config="true" duration-ms="3" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="missingRequiredFieldTest()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="missingRequiredFieldTest" duration-ms="1" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingRequiredFieldTest -->
        <test-method status="PASS" signature="badBEPFormatTest()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="badBEPFormatTest" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- badBEPFormatTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="parseTest()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="parseTest" duration-ms="3" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="setUp" is-config="true" duration-ms="1" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testParseNullAnnounce()[pri:0, instance:com.turn.ttorrent.common.TorrentParserTest@3d24753a]" name="testParseNullAnnounce" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseNullAnnounce -->
      </class> <!-- com.turn.ttorrent.common.TorrentParserTest -->
      <class name="com.turn.ttorrent.common.creation.MetadataBuilderTest">
        <test-method status="PASS" signature="testBuildWithSpecifiedHashes()[pri:0, instance:com.turn.ttorrent.common.creation.MetadataBuilderTest@2acf57e3]" name="testBuildWithSpecifiedHashes" duration-ms="2" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildWithSpecifiedHashes -->
        <test-method status="PASS" signature="testMultiFileModeWithOneFile()[pri:0, instance:com.turn.ttorrent.common.creation.MetadataBuilderTest@2acf57e3]" name="testMultiFileModeWithOneFile" duration-ms="1" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiFileModeWithOneFile -->
        <test-method status="PASS" signature="testSingleFile()[pri:0, instance:com.turn.ttorrent.common.creation.MetadataBuilderTest@2acf57e3]" name="testSingleFile" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleFile -->
        <test-method status="PASS" signature="testMultiFileWithOneFileValues()[pri:0, instance:com.turn.ttorrent.common.creation.MetadataBuilderTest@2acf57e3]" name="testMultiFileWithOneFileValues" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiFileWithOneFileValues -->
      </class> <!-- com.turn.ttorrent.common.creation.MetadataBuilderTest -->
      <class name="com.turn.ttorrent.common.TorrentUtilsTest">
        <test-method status="PASS" signature="testBytesToHexTrailingZero()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexTrailingZero" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexTrailingZero -->
        <test-method status="PASS" signature="testBytesToHexAllSymbols()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexAllSymbols" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexAllSymbols -->
        <test-method status="PASS" signature="testBytesToHexWithEmptyByteArray()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexWithEmptyByteArray" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexWithEmptyByteArray -->
        <test-method status="PASS" signature="testBytesToHexWithLeadingZero()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexWithLeadingZero" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexWithLeadingZero -->
        <test-method status="PASS" signature="testBytesToHexWithNull()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexWithNull" duration-ms="1" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.turn.ttorrent.common.TorrentUtils.byteArrayToHexString(TorrentUtils.java:27)
	at com.turn.ttorrent.common.TorrentUtilsTest.testBytesToHexWithNull(TorrentUtilsTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexWithNull -->
        <test-method status="PASS" signature="testBytesToHexWithSingleByte()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexWithSingleByte" duration-ms="2" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexWithSingleByte -->
        <test-method status="PASS" signature="testBytesToHexWithZeroByte()[pri:0, instance:com.turn.ttorrent.common.TorrentUtilsTest@67b64c45]" name="testBytesToHexWithZeroByte" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesToHexWithZeroByte -->
      </class> <!-- com.turn.ttorrent.common.TorrentUtilsTest -->
      <class name="com.turn.ttorrent.common.protocol.udp.UDPAnnounceResponseMessageTest">
        <test-method status="PASS" signature="parseTest()[pri:0, instance:com.turn.ttorrent.common.protocol.udp.UDPAnnounceResponseMessageTest@6e8dacdf]" name="parseTest" duration-ms="5" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTest -->
      </class> <!-- com.turn.ttorrent.common.protocol.udp.UDPAnnounceResponseMessageTest -->
      <class name="com.turn.ttorrent.common.creation.HashesCalculatorsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="setUp" is-config="true" duration-ms="5" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testEmptySource()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="testEmptySource" duration-ms="11" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySource -->
        <test-method status="PASS" signature="testOneLargeSource()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="testOneLargeSource" duration-ms="1567" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneLargeSource -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:56Z" finished-at="2020-12-21T20:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReadingNotFullyBuffer()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="testReadingNotFullyBuffer" duration-ms="2" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadingNotFullyBuffer -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testStreamsAsPiece()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="testStreamsAsPiece" duration-ms="3" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStreamsAsPiece -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testWithSmallSource()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="testWithSmallSource" duration-ms="1" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithSmallSource -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.common.creation.HashesCalculatorsTest@506e6d5e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:36:58Z" finished-at="2020-12-21T20:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.turn.ttorrent.common.creation.HashesCalculatorsTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
