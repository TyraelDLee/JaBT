<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1123" started-at="2020-12-21T09:37:02Z" finished-at="2020-12-21T09:37:03Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1123" started-at="2020-12-21T09:37:02Z" finished-at="2020-12-21T09:37:03Z">
      <class name="com.turn.ttorrent.network.ConnectionWorkerTest">
        <test-method status="PASS" signature="testCleanupIsCalled()[pri:0, instance:com.turn.ttorrent.network.ConnectionWorkerTest@3c756e4d]" name="testCleanupIsCalled" duration-ms="48" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanupIsCalled -->
      </class> <!-- com.turn.ttorrent.network.ConnectionWorkerTest -->
      <class name="com.turn.ttorrent.network.ConnectionManagerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="setUp" is-config="true" duration-ms="53" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="canAcceptAndReadData()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="canAcceptAndReadData" duration-ms="24" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canAcceptAndReadData -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="setUp" is-config="true" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testThatDoubleInitThrowException()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="testThatDoubleInitThrowException" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[connection manager was already initialized]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: connection manager was already initialized
	at com.turn.ttorrent.network.ConnectionManager.initAndRunWorker(ConnectionManager.java:62)
	at com.turn.ttorrent.network.ConnectionManagerTest.testThatDoubleInitThrowException(ConnectionManagerTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatDoubleInitThrowException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.network.ConnectionManagerTest@7c0e2abd]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.turn.ttorrent.network.ConnectionManagerTest -->
      <class name="com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="setUp" is-config="true" duration-ms="129" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkThatWriteTaskDoesntRemovedIfBufferIsNotWrittenInOneStep()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="checkThatWriteTaskDoesntRemovedIfBufferIsNotWrittenInOneStep" duration-ms="11" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkThatWriteTaskDoesntRemovedIfBufferIsNotWrittenInOneStep -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="setUp" is-config="true" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testThatOnWriteDoneInvoked()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="testThatOnWriteDoneInvoked" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatOnWriteDoneInvoked -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="setUp" is-config="true" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testThatOnWriteFailedInvokedIfChannelThrowException()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest@32e6e9c3]" name="testThatOnWriteFailedInvokedIfChannelThrowException" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatOnWriteFailedInvokedIfChannelThrowException -->
      </class> <!-- com.turn.ttorrent.network.keyProcessors.WritableKeyProcessorTest -->
      <class name="com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="setUp" is-config="true" duration-ms="788" started-at="2020-12-21T20:37:02Z" finished-at="2020-12-21T20:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCleanupWillCloseWithTimeout()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="testCleanupWillCloseWithTimeout" duration-ms="42" started-at="2020-12-21T20:37:02Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanupWillCloseWithTimeout -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCleanupWithoutClose()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="testCleanupWithoutClose" duration-ms="2" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanupWithoutClose -->
        <test-method status="PASS" signature="testSelected()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="testSelected" duration-ms="1" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelected -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="setUp" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest@48eff760]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-12-21T20:37:03Z" finished-at="2020-12-21T20:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.turn.ttorrent.network.keyProcessors.CleanupKeyProcessorTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
